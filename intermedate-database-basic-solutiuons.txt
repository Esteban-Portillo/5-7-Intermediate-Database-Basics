---------------- PRACTICE JOINS --------------------- 


----------------------------1-------------------------
-- select * from invoice i 
-- join invoice_line il on il.invoice_id = i.invoice_id

-- where il.unit_price > 0.99;
----------------------------2---------------------------

-- select * from invoice ;
-- select * from invoice_line;
-- select * from customer

-- select i.invoice_date, c.first_name, c.last_name, i.total from invoice i
-- join customer c on i.customer_id = c.customer_id;


--------------------------3-------------------------------

-- select    c.first_name, c.last_name,e.first_name, e.last_name from employee e 
-- join customer c on  e.employee_id = c.support_rep_id

------------------------4------------------------------------

-- select al.title, ar.name from album al 
-- join artist ar on al.artist_id = ar.artist_id
-- order by ar.name asc;



-------------------------------5-----------------------------------

-- select pt.track_id from playlist_track pt 
-- join playlist p on p.playlist_id = pt.playlist_id
-- where p.name = 'Music'


---------------------------------6-----------------------------------

-- select t.name from track t 
-- join playlist_track pt on pt.track_id = t.track_id
-- where pt.playlist_id = 5;


----------------------------------7---------------------------------

-- select t.name, p.name from track t 
-- join playlist_track pt on pt.track_id = t.track_id
-- join playlist p on p.playlist_id = pt.playlist_id 

---------------------------------8------------------------------


-- select t.name, a.title from track t
-- join genre g on g.genre_id = t.genre_id
-- join album a on a.album_id = t.album_id
-- where g.name = 'Alternative & Punk'
-- order by a.title




---------------------------------Practice nested queries--------------------------

-------------------------1----------------------------------------------------------

-- select * from invoice 
-- where invoice_id in ( select invoice_id from invoice_line where unit_price > 0.99 );


--------------------------------2---------------------------------------------


-- select * from playlist_track 
-- where playlist_id in ( select playlist_id from playlist where name = 'Music' )


---------------------------------3--------------------------------------------


-- select name from track 
-- where track_id in ( select track_id from playlist_track where playlist_id = 5 )

-------------------------------4-------------------------------------------------------------

-- select * from track
-- where genre_id in ( select genre_id from genre where name = 'Comedy' )

----------------------------------5---------------------------------------------

-- select * from track 
-- where album_id in ( select album_id from album where title = 'Fireball' );

-------------------------------6------------------------------------------------

-- select * from track 
-- where album_id in ( select album_id from album where artist_id in ( select artist_id from artist where name = 'Queen' ) )







--------------------------------------Practice updating Rows------------------------------------


-------------------------------1-----------------------------------------------------------------


-- select * from customer;
-- update customer
-- set fax = null 
-- where fax is not null ;


--------------------------------------2----------------------------------


-- update customer 
-- set company = 'Self'
-- where company is  null;

-- select * from customer;

----------------------------------------3-------------------------------

-- update customer 
-- set last_name = 'Thompson' 
-- where first_name = 'Julia' and last_name = 'Barnett';

--------------------------------------4------------------------------------

-- update customer 
-- set support_rep_id = 4 
-- where email = 'luisrojas@yahoo.cl'
--------------------------------------5--------------------------------

-- update track 
-- set composer = 'The darkness around us'
-- where composer is null and genre_id = (select genre_id from genre where name = 'Metal');




------------------------Group by-------------------------------------------


---------------------------1-----------------------------

-- select count(*), g.name from track t 
-- join genre g on t.genre_id = g.genre_id
-- group by g.name 

---------------------------2--------------------------------

-- select count(*), g.name from track t 
-- join genre g on t.genre_id = g.genre_id
-- where g.name = 'Pop' or g.name = 'Rock'
-- group by g.name 


-------------------------------3------------------------

-- select count(*), ar.name from album al
-- join artist ar on ar.artist_id = al.artist_id
-- group by ar.name 


-------------------------------Use Distinct----------------------


-------------------------1---------------------------

-- select distinct composer from track


----------------------2--------------------------------

-- select distinct billing_postal_code from invoice


-----------------------3-----------------------------

-- select distinct company from customer 



---------------------------------Delete Rows----------------------

-----------------------------------1---------------------------------------

-- CREATE TABLE practice_delete ( name TEXT, type TEXT, value INTEGER );
-- INSERT INTO practice_delete ( name, type, value ) VALUES ('delete', 'bronze', 50);
-- INSERT INTO practice_delete ( name, type, value ) VALUES ('delete', 'bronze', 50);
-- INSERT INTO practice_delete ( name, type, value ) VALUES ('delete', 'bronze', 50);
-- INSERT INTO practice_delete ( name, type, value ) VALUES ('delete', 'silver', 100);
-- INSERT INTO practice_delete ( name, type, value ) VALUES ('delete', 'silver', 100);
-- INSERT INTO practice_delete ( name, type, value ) VALUES ('delete', 'gold', 150);
-- INSERT INTO practice_delete ( name, type, value ) VALUES ('delete', 'gold', 150);
-- INSERT INTO practice_delete ( name, type, value ) VALUES ('delete', 'gold', 150);
-- INSERT INTO practice_delete ( name, type, value ) VALUES ('delete', 'gold', 150);

-- SELECT * FROM practice_delete;

-----------------------------------------2----------------------------------------------


-- delete from practice_delete 
-- where type = 'bronze';

-- select * from practice_delete:


--------------------------------------3---------------------------------------------------

-- delete from practice_delete 
-- where type = 'silver';

-- select *from practice_delete

-------------------------------------4----------------------------------------------

-- delete from practice_delete 
-- where value = 150 ;

-- select * from practice_delete ;






---------------------------------------------------------------------------------------------
---------------------------------------------------------------------------------------------
---------------------------------------------------------------------------------------------

-- create table users (
-- 	user_id serial primary key,
--   name varchar(100),
--   email varchar(150)
    
-- );

-- insert into users (name, email)
-- values
-- ('esteban', 'youknowmyeamil.com'),
-- ('rosita','rosita.com'),
-- ('patrick','bobandpatrick.com');

-- select * from users ;

-- create table products (
-- product_id serial primary key,
-- name varchar(150),
-- price int );

-- insert into products
-- (name,price)
-- values 
-- ('burger',3),
-- ('pizza', 5),
-- ('omelet', 6);

-- select * from products;

-- create table orders (
--   order_id serial primary key,
--   user_id int references users( user_id ),
--   product_id int references products( product_id ),
--   quantity int 
-- );

-- insert into orders (user_id, product_id, quantity)
-- values
-- (1,1,8),
-- (3,2,2),
-- (2,1,10);

-- select * from orders;

-- select * from products p
-- join orders o on o.product_id = p.product_id
-- where o.order_id = 1

-- select * from orders 


-- select o.quantity + p.price from orders o
-- join products p on o.product_id = p.product_id 
-- where o.order_id = 1 ;

-- select * from orders o
-- join users u on u.user_id = o.user_id 

-- select * from orders o
-- join users u on u.user_id = o.user_id 
-- where o.user_id = 1


-- select count(*), u.name from orders o
-- join users u on u.user_id = o.user_id
-- where u.user_id = 1
-- group by u.name

